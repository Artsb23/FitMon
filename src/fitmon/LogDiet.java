/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package fitmon;

import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Aarthi
 */
public class LogDiet extends javax.swing.JFrame {

    private double calories;
    private double fat, protein, carbohydrates;
    private UserSession usrSession;
    private Food foodItem;
    private ArrayList<Food> startingFoodList = new ArrayList<Food>();
    private ArrayList<Food> finalFoodList = new ArrayList<Food>();
    /**
     * Creates new form LogDiet
     */
    public LogDiet() {
        initComponents();
        errorMsgPanel.setVisible(false);
        
    }
    
    public LogDiet(UserSession value) {
        initComponents();
        errorMsgPanel.setVisible(false);
        usrSession = value;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dietPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        mealTypeDDL = new javax.swing.JComboBox();
        logFoodButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        foodInfoTable = new javax.swing.JTable();
        foodEntryPanel = new javax.swing.JPanel();
        foodTextField1 = new javax.swing.JTextField();
        foodDDL1 = new javax.swing.JComboBox();
        qtyDDL1 = new javax.swing.JComboBox();
        addFoodButton = new javax.swing.JButton();
        errorMsgPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        logDietButton = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.FlowLayout());

        dietPane.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        mealTypeDDL.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        mealTypeDDL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Breakfast", "Lunch", "Snacks", "Dinner" }));
        jPanel1.add(mealTypeDDL);
        mealTypeDDL.setBounds(620, 110, 140, 30);

        logFoodButton.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        logFoodButton.setText("Log another food");
        logFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logFoodButtonActionPerformed(evt);
            }
        });
        jPanel1.add(logFoodButton);
        logFoodButton.setBounds(830, 290, 180, 25);

        foodInfoTable.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        foodInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Calories", "Fat", "Protein", "Carbs", "Edit"
            }
        ));
        foodInfoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foodInfoTableMouseClickedHandler(evt);
            }
        });
        jScrollPane2.setViewportView(foodInfoTable);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(430, 370, 580, 120);

        foodTextField1.setText("Enter food name");
        foodTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                foodTextFieldMousePressedHandler(evt);
            }
        });
        foodTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodTextField1ActionPerformed(evt);
            }
        });

        foodDDL1.setEnabled(false);

        qtyDDL1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        qtyDDL1.setEnabled(false);

        addFoodButton.setText("Add");
        addFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout foodEntryPanelLayout = new javax.swing.GroupLayout(foodEntryPanel);
        foodEntryPanel.setLayout(foodEntryPanelLayout);
        foodEntryPanelLayout.setHorizontalGroup(
            foodEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodEntryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(foodTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(foodDDL1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(qtyDDL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFoodButton)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        foodEntryPanelLayout.setVerticalGroup(
            foodEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodEntryPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(foodEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodDDL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qtyDDL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFoodButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(foodEntryPanel);
        foodEntryPanel.setBounds(540, 210, 470, 40);

        jLabel2.setFont(new java.awt.Font("Calibri Light", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Please enter all the values!");

        javax.swing.GroupLayout errorMsgPanelLayout = new javax.swing.GroupLayout(errorMsgPanel);
        errorMsgPanel.setLayout(errorMsgPanelLayout);
        errorMsgPanelLayout.setHorizontalGroup(
            errorMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorMsgPanelLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );
        errorMsgPanelLayout.setVerticalGroup(
            errorMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(errorMsgPanel);
        errorMsgPanel.setBounds(550, 160, 250, 30);

        logDietButton.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        logDietButton.setText("Log Diet");
        logDietButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logDietButtonActionPerformed(evt);
            }
        });
        jPanel1.add(logDietButton);
        logDietButton.setBounds(700, 520, 140, 30);
        jPanel1.add(jCalendar1);
        jCalendar1.setBounds(790, 110, 150, 30);

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Log Diet");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(670, 20, 210, 60);

        cancelButton.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);
        cancelButton.setBounds(880, 520, 120, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/newDiet.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -6, 1024, 580);

        dietPane.addTab("tab1", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
        );

        dietPane.addTab("tab2", jPanel2);

        getContentPane().add(dietPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logFoodButtonActionPerformed
        // TODO add your handling code here:
        foodEntryPanel.repaint();
        foodTextField1.setText("");
        foodDDL1.removeAllItems();
        foodDDL1.enable(false);
        qtyDDL1.enable(false);
    }//GEN-LAST:event_logFoodButtonActionPerformed

    private void addFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodButtonActionPerformed
        // TODO add your handling code here:
        if(foodTextField1.getText().equals("") || foodTextField1.getText() == null|| foodTextField1.getText().equals("Enter food name"))
            errorMsgPanel.setVisible(true);
        else if(foodDDL1.getSelectedItem() == "Meal")
            errorMsgPanel.setVisible(true);
        else if(qtyDDL1.getSelectedItem() == "Qty")
            errorMsgPanel.setVisible(true);
        else
        {
            errorMsgPanel.setVisible(false);
            String selectedFood = (String)foodDDL1.getSelectedItem();
            int index = selectedFood.indexOf("--");
            String foodName = selectedFood.substring(0, index);
            String description = selectedFood.substring(index+2);
            String foodID=null;
            String servingID=null;
            String itemName=null;
            String qty=null;
            String category=null;
            int count=0;
            double calories=0,fat=0,sodium=0,carbs=0,protein=0,fiber=0,cholesterol=0,sugar=0;
            
            for(int i=0;i<startingFoodList.size();i++)
            {
                if(startingFoodList.get(i).getItemName().equals(foodName) && (startingFoodList.get(i).getQuantity().equals(description)))
                {
                    foodID = startingFoodList.get(i).getFoodID();
                    servingID = startingFoodList.get(i).getServingID();
                    itemName = startingFoodList.get(i).getItemName();
                    qty = startingFoodList.get(i).getQuantity();
                    category = startingFoodList.get(i).getCategory();
                    calories = startingFoodList.get(i).getCalories();
                    calories = calories*Double.parseDouble((String)qtyDDL1.getSelectedItem());
                    fat = startingFoodList.get(i).getFat();
                    sodium = startingFoodList.get(i).getSodium();
                    carbs = startingFoodList.get(i).getCarbs();
                    protein = startingFoodList.get(i).getProtein();
                    fiber = startingFoodList.get(i).getFiber();
                    cholesterol = startingFoodList.get(i).getCholesterol();
                    sugar = startingFoodList.get(i).getSugar();
                    foodItem = new Food(foodID,servingID,itemName,qty,category,calories,fat,sodium,carbs,protein,fiber,cholesterol,sugar);
                    finalFoodList.add(foodItem);
                }
            }
            double val = calories*Double.parseDouble((String)qtyDDL1.getSelectedItem());
            //ImageIcon icon = new ImageIcon("Images/list_remove.png");
            //Object[] data = {"Name", "qty", "calories", "fat", "protein", "carbs", "Edit"};
            Object[] row = {foodDDL1.getSelectedItem(), qtyDDL1.getSelectedItem(), calories, fat, protein, carbs, "Remove"};
            DefaultTableModel model = (DefaultTableModel) foodInfoTable.getModel();
            model.addRow(row);
            
            //foodInfoTable.setValueAt(icon, foodInfoTable.getRowCount(), 6);
            
        }
    }//GEN-LAST:event_addFoodButtonActionPerformed

    private void foodTextFieldMousePressedHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodTextFieldMousePressedHandler
        // TODO add your handling code here:
        foodTextField1.setText("");
    }//GEN-LAST:event_foodTextFieldMousePressedHandler

    private void foodTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodTextField1ActionPerformed
        // TODO add your handling code here:
        DietAPI obj = new DietAPI();
        ArrayList<Food> foodList = new ArrayList<Food>();
        ArrayList<ArrayList<Food>> listOfFoodList=null;
        String foodName = foodTextField1.getText();
        try {
            listOfFoodList = obj.searchFood(foodName);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(LogDiet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(LogDiet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(LogDiet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(LogDiet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LogDiet.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=0; i<listOfFoodList.size();i++)
        {
            for(int j=0; j<listOfFoodList.get(i).size();j++)
            {
                foodList.add(listOfFoodList.get(i).get(j));
            }
        }
        for(int k=0;k<foodList.size();k++)
        {
            foodDDL1.addItem(foodList.get(k).getItemName()+"--"+foodList.get(k).getQuantity());
            foodDDL1.setEnabled(true);
            qtyDDL1.setEnabled(true);
            startingFoodList.add(foodList.get(k));
            
        }
    }//GEN-LAST:event_foodTextField1ActionPerformed

    private void logDietButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logDietButtonActionPerformed
        // TODO add your handling code here:
        Diet diet = new CustomizedDiet();
        Notification note = new Notification();
        int userId = usrSession.getUserID();
        for(int i=0; i<finalFoodList.size();i++)
        {
            diet.createDiet(finalFoodList.get(i), (String)mealTypeDDL.getSelectedItem(), String.valueOf(jCalendar1.getDate().getYear()+1900)+"-"+String.valueOf(jCalendar1.getDate().getMonth()+1)+"-"+String.valueOf(jCalendar1.getDate().getDate()), userId,Integer.parseInt((String)qtyDDL1.getSelectedItem()));
            diet.calculateTotalCalories(finalFoodList.get(i).getCalories());
            
        }
        //diet.dietAdded(userId, String.valueOf(jCalendar1.getDate().getYear()+1900)+"-"+String.valueOf(jCalendar1.getDate().getMonth()+1)+"-"+String.valueOf(jCalendar1.getDate().getDate()));
    }//GEN-LAST:event_logDietButtonActionPerformed

    private void foodInfoTableMouseClickedHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodInfoTableMouseClickedHandler
        // TODO add your handling code here:
    if (evt.getClickCount() == 1) {
      JTable target = (JTable)evt.getSource();
      int row = target.getSelectedRow();
      int column = target.getSelectedColumn();
     String selectedFood = (String)target.getValueAt(row, 0);
     int index = selectedFood.indexOf("--");
    String foodName = selectedFood.substring(0, index);
    String description = selectedFood.substring(index+2);
      if(target.getColumnName(target.getSelectedColumn()).equals("Edit"))
      {
          DefaultTableModel model = (DefaultTableModel) foodInfoTable.getModel();
          model.removeRow(row);
          for(int i=0;i<finalFoodList.size();i++)
          {
              if(finalFoodList.get(i).getItemName().equals(foodName) && finalFoodList.get(i).getQuantity().equals(description))
              {
                    finalFoodList.remove(i);
                    break;
              }
          }
      }
      // do some action if appropriate column
    }
    }//GEN-LAST:event_foodInfoTableMouseClickedHandler

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogDiet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogDiet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogDiet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogDiet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogDiet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFoodButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTabbedPane dietPane;
    private javax.swing.JPanel errorMsgPanel;
    private javax.swing.JComboBox foodDDL1;
    private javax.swing.JPanel foodEntryPanel;
    private javax.swing.JTable foodInfoTable;
    private javax.swing.JTextField foodTextField1;
    private com.toedter.calendar.JDateChooser jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logDietButton;
    private javax.swing.JButton logFoodButton;
    private javax.swing.JComboBox mealTypeDDL;
    private javax.swing.JComboBox qtyDDL1;
    // End of variables declaration//GEN-END:variables
}
